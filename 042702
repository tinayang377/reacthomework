import React from 'react';


var UserGreeting=(props) =>{

 return <h1>Welcome back!</h1>;

}


var  GuestGreeting=(props) =>{

 return <h1>Please sign up.</h1>;

}


var Greeting = (props)  =>{

 const isLoggedIn = props.isLoggedIn;

 if (isLoggedIn) {

   return <UserGreeting />;

 }

 return <GuestGreeting />;

}


var  LoginButton =(props)=> {

 return (

   <button onClick={()=>props.onClick}>

     Login

   </button>

 );

}


var LogoutButton=(props) =>{

 return (

   <button onClick={()=>props.onClick}>

     Logout

   </button>

 );

}


class App extends React.Component {

 constructor(props) {

   super(props);

   this.handleLoginClick = this.handleLoginClick.bind(this);

   this.handleLogoutClick = this.handleLogoutClick.bind(this);

   this.state = {isLoggedIn: false};

 }


  handleLoginClick=()=> {

   this.setState({isLoggedIn: true});

 }


 handleLogoutClick =()=> {

   this.setState({isLoggedIn: false});

 }


 render() {

   const isLoggedIn = this.state.isLoggedIn;

   let button;

   if (isLoggedIn) {

     button = <LogoutButton onClick={()=>this.handleLogoutClick} />;

   } else {

     button = <LoginButton onClick={()=>this.handleLoginClick} />;

   }


   return (

     <div>

       <Greeting isLoggedIn={()=>isLoggedIn} />

       {button}

     </div>

   );

 }

}


export default App;
import React from 'react';
import ReactDOM from 'react-dom';
//import './index.css';
import App from './App01';
import reportWebVitals from './reportWebVitals';

ReactDOM.render(


 
<App />,
 
  document.getElementById('root')
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

import React from 'react';


class App extends React.Component {

  constructor(props) {

     super(props);

   

     this.state = {

        data: '初始資料，來自父元件 this.state'

     }

     this.updateState = this.updateState.bind(this);

  };

  updateState = () => {

     this.setState({data: '子元件使用父元件 event 改變父元件 state'})

  }

  render() {

     return (

        <div>

           <Content updateStateProp = {this.updateState} myDataProp = {this.state.data}></Content>

        </div>

     );

  }

}


class Content extends React.Component {

  render() {

     return (

        <div>

           <button onClick = {()=>this.props.updateStateProp}>我是Content子元件的按鈕</button>

           <h3>{this.props.myDataProp}</h3>

        </div>

     );

  }

}


export default App;
